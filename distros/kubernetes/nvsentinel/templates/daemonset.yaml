# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "nvsentinel.fullname" . }}
  labels:
    {{- include "nvsentinel.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 5%
  selector:
    matchLabels:
      {{- include "nvsentinel.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.platformConnector.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nvsentinel.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nvsentinel.serviceAccountName" . }}
      containers:
        - name: platform-connector
          ports:
            - name: metrics
              containerPort: {{ .Values.global.metricsPort }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            runAsUser: 0
            capabilities:
              drop:
              - ALL
          image: "{{ .Values.platformConnector.image.repository }}:{{ .Values.platformConnector.image.tag | default .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.platformConnector.image.pullPolicy }}
          args:
          - "--config=/etc/config/config.json"
          - "--metrics-port={{ .Values.global.metricsPort }}"
          - "--mongo-client-cert-mount-path=/etc/ssl/mongo-client"
          - "--socket={{ .Values.socketPath }}"
          resources:
            {{- toYaml .Values.platformConnector.resources | nindent 12 }}
          volumeMounts:
            - name: var-run-vol
              mountPath: /var/run
            - name: platform-connector-configmap
              mountPath: /etc/config/
            - name: mongo-app-client-cert
              mountPath: /etc/ssl/mongo-client
              readOnly: true
          env: 
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          envFrom:
            - configMapRef:
                name: mongodb-config
                optional: true
      volumes:
        - name: var-run-vol
          hostPath:
            path: /var/run/nvsentinel
            type: DirectoryOrCreate
        - name: platform-connector-configmap
          configMap:
            name: {{ include "nvsentinel.fullname" . }}
        - name: mongo-app-client-cert
          secret:
            secretName: mongo-app-client-cert-secret
            optional: true
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
