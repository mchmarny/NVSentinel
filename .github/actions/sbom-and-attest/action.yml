# Copyright (c) 2025, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Generate SBOM and Attest'
description: 'Generates SBOM and build provenance attestation for container images'

inputs:
  image_name:
    description: 'Full image name (without tag or digest)'
    required: true
  image_digest:
    description: 'Image digest (sha256:...)'
    required: true
  registry_password:
    description: 'Registry password for authentication'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Authenticate to GHCR
      uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef  # v3.6.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.registry_password }}

    - name: Derive safe filename
      id: name
      shell: bash
      run: |
        IMAGE="${{ inputs.image_name }}"
        SAFE="$(basename "${IMAGE%%:*}")"  # strip tag if present, then basename
        echo "safe=$SAFE" >> "$GITHUB_OUTPUT"

    - name: Generate SBOM
      uses: anchore/sbom-action@8e94d75ddd33f69f691467e42275782e4bfefe84  # v0.20.9
      with:
        image: "${{ inputs.image_name }}@${{ inputs.image_digest }}"
        format: cyclonedx-json
        output-file: sbom-${{ steps.name.outputs.safe }}.cdx.json
        upload-artifact: true          # also uploads to the workflow run
        upload-release-assets: auto    # 'auto' == assets on tags
    
    - name: Verify SBOM generated
      shell: bash
      run: |
        echo "::group::Verify SBOM file"
        SBOM_FILE="sbom-${{ steps.name.outputs.safe }}.cdx.json"
        if [ -f "$SBOM_FILE" ]; then
          echo "✅ SBOM file exists: $SBOM_FILE"
          echo "File size: $(ls -lh "$SBOM_FILE" | awk '{print $5}')"
          echo "First 10 lines:"
          head -10 "$SBOM_FILE"
        else
          echo "::error::SBOM file not found: $SBOM_FILE"
          echo "Contents of current directory:"
          ls -la
          exit 1
        fi
        echo "::endgroup::"

    - name: Install Cosign
      uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad  # v4.0.0

    - name: Cosign SBOM attestation
      shell: bash
      env:
        COSIGN_EXPERIMENTAL: "1"
      run: |
        set -euo pipefail  # Fail on any error
        
        echo "::group::Cosign SBOM Attestation"
        echo "Image: ${{ inputs.image_name }}@${{ inputs.image_digest }}"
        echo "SBOM file: sbom-${{ steps.name.outputs.safe }}.cdx.json"
        echo "COSIGN_EXPERIMENTAL: ${COSIGN_EXPERIMENTAL}"
        
        # Verify SBOM file exists
        if [ ! -f "sbom-${{ steps.name.outputs.safe }}.cdx.json" ]; then
          echo "::error::SBOM file not found: sbom-${{ steps.name.outputs.safe }}.cdx.json"
          exit 1
        fi
        
        echo "Running cosign attest..."
        cosign attest \
          --yes \
          --predicate sbom-${{ steps.name.outputs.safe }}.cdx.json \
          --type cyclonedx \
          "${{ inputs.image_name }}@${{ inputs.image_digest }}" || {
            echo "::error::Cosign attestation failed with exit code $?"
            exit 1
          }
        
        echo "✅ Cosign attestation completed successfully"
        echo "::endgroup::"

    - name: Attest build provenance
      uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a  # v3.0.0
      with:
        subject-name: ${{ inputs.image_name }}
        subject-digest: ${{ inputs.image_digest }}
        push-to-registry: true